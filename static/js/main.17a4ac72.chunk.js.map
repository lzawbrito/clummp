{"version":3,"sources":["components/SideBySide.jsx","components/Difference.jsx","components/Flicker.jsx","components/VisDisplay.jsx","components/TextBox.jsx","components/StatusBar.jsx","components/SelectMenu.jsx","components/Request.jsx","components/SimMenu.jsx","components/VisMenu.jsx","icons/rotate-left-svgrepo-com.svg","components/ImageMenu.jsx","icons/edit-flip-h-svgrepo-com.svg","icons/edit-flip-v-svgrepo-com.svg","components/ControlPanel.jsx","icons/info-svgrepo-com.svg","components/SideBar.jsx","components/VisFiller.jsx","App.js","reportWebVitals.js","index.js"],"names":["Plot","createPlotlyComponent","Plotly","SideBySide","props","data","z","obs","type","showscale","sim","xaxis","yaxis","layout","font","family","plot_bgcolor","paper_bgcolor","grid","rows","columns","pattern","xgap","color","xaxis2","scaleanchor","yaxis2","annotations","text","size","showarrow","align","x","y","xref","yref","divId","Difference","diff","colorbar","tickfont","title","Flicker","viewSim","simData","obsData","obsStyle","display","simStyle","style","autosize","VisDisplay","vis","TextBox","className","marginRight","onChange","e","change","target","value","StatusBar","error","status","task","SelectMenu","options","map","op","Request","useState","obsPath","setObsPath","setN","setStatus","setError","handleRequest","console","log","setData","Trial1","Trial2","Trial3","Trial4","submitButton","onClick","disabled","marginBottom","str","SimMenu","id","fontWeight","sims","changeActiveSim","setActiveSim","setActiveRank","rank","button","activeRank","t","toFixed","href","rel","activeVis","VisMenu","changeActiveVis","v","setVis","transforms","action","icon","ImageMenu","toggleText","setToggleText","toggle","toggleViewSim","axios","require","default","activeSimFile","find","s","name","get","params","filename","then","response","catch","headers","request","message","src","alt","ControlPanel","SideBar","InfoIcon","height","length","VisFiller","App","activeSim","setViewSim","d","visDisplay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a4ac72.chunk.js","sourcesContent":["import createPlotlyComponent from 'react-plotly.js/factory';\nimport Plotly from 'plotly.js'\nconst Plot = createPlotlyComponent(Plotly);\n\nexport default function SideBySide(props) {\n\n    const gap = 0.1\n    const data = [\n        {\n            z: props.obs,\n            type: 'heatmap',\n            showscale: false,\n        },\n        {\n            z: props.sim.data,\n            type: 'heatmap',\n            showscale: false,\n            xaxis: 'x2', \n            yaxis: 'y2',\n        },\n    ]\n\n    const layout = {\n        font: {family: 'Roboto Mono, monospace'},\n        plot_bgcolor: '#141414',\n        paper_bgcolor: '#141414',\n        grid: {rows:1, columns: 2, pattern: 'independent', xgap: gap},\n        xaxis: {color: 'white'},\n        xaxis2: {color: 'white'},\n        yaxis: {scaleanchor: 'x', color: 'white'},\n        yaxis2: {scaleanchor: 'x2', color: 'white'},\n        annotations: [{\n                text: \"Observation\",\n                font: {size: 24, color: 'white'},\n                showarrow: false,\n                align: 'center',\n                x: 0.25, //position in x domain\n                y: 1.1, //position in y domain\n                xref: 'paper',\n                yref: 'paper',\n            },\n                {\n                text: \"Simulation\",\n                font: {size: 24, color: 'white'},\n                showarrow: false,\n                align: 'center',\n                x: 0.75, //position in x domain\n                y: 1.1,  // position in y domain\n                xref: 'paper',\n                yref: 'paper',\n                }\n            ]\n    }\n\n    return <>\n        <Plot divId=\"visDisplay\" data={data} layout={layout}></Plot>\n    </>\n}","import createPlotlyComponent from 'react-plotly.js/factory';\nimport Plotly from 'plotly.js'\nconst Plot = createPlotlyComponent(Plotly);\n\nexport default function Difference(props) {\n\n    const data = [\n        {\n            z: props.sim.diff,\n            type: 'heatmap',\n            showscale: true,\n\t\t\tcolorbar: {tickfont: {color: 'white'}}\n        },\n    ]\n\n    const layout = {\n        font: {family: 'Roboto Mono, monospace', color: 'white'},\n        plot_bgcolor: '#141414',\n        paper_bgcolor: '#141414',\n        xaxis: {color: 'white'},\n        yaxis: {scaleanchor: 'x', color: 'white'},\n\t\ttitle: {\n\t\t\ttext: 'abs(Simulation - Observation)',\n\t\t\tfont: {\n\t\t\t\tsize: 24,\n\t\t\t}\n\t\t},\n    }\n\n    return <>\n        <Plot divId=\"visDisplay\" data={data} layout={layout}></Plot>\n    </>\n}","import createPlotlyComponent from 'react-plotly.js/factory';\nimport Plotly from 'plotly.js'\nimport { useState } from 'react';\nconst Plot = createPlotlyComponent(Plotly);\n\n\nexport default function Flicker(props) {\n    // var [viewSim, setViewSim] = useState(false)\n    let viewSim = props.viewSim\n\n    const simData = [\n        {\n            z: props.sim.data,\n            type: 'heatmap',\n            showscale: false,\n        },\n    ]\n\n    const simLayout = {\n        font: {family: 'roboto mono, monospace', color: 'white'},\n        plot_bgcolor: '#141414',\n        paper_bgcolor: '#141414',\n        xaxis: {color: 'white'},\n        yaxis: {scaleanchor: 'x', color: 'white'},\n\t\ttitle: {\n            text: 'Simulation',\n\t\t\tfont: {\n                size: 24,\n\t\t\t}\n\t\t},\n        autosize: true,\n    }\n    \n    const obsData = [\n        {\n            z: props.obs,\n            type: 'heatmap',\n            showscale: false\n        },\n    ]\n\n    const obsLayout = {\n        font: {family: 'roboto mono, monospace', color: 'white'},\n        plot_bgcolor: '#141414',\n        paper_bgcolor: '#141414',\n        xaxis: {color: 'white'},\n        yaxis: {scaleanchor: 'x', color: 'white'},\n\t\ttitle: {\n            text: 'Observation',\n\t\t\tfont: {\n                size: 24,\n\t\t\t}\n\t\t},\n        autosize: true,\n    }\n\n    let obsStyle = {display: 'block'} \n    let simStyle = {display: 'none'}\n    if (viewSim) {\n        obsStyle = {display: 'none'}\n        simStyle = {display: 'block'}\n    }\n\n    // let obsStyle = 'visDisplay' \n    // let simStyle = 'visDisplayHidden'\n    // if (viewSim) {\n    //     obsStyle = 'visDisplayHidden'\n    //     simStyle = 'visDisplay'\n    // }\n    return <>\n        <div style={obsStyle}>\n            <Plot divId=\"visDisplay\" data={obsData} layout={obsLayout}></Plot>\n        </div>\n        <div style={simStyle}>\n            <Plot divId=\"visDisplay\" data={simData} layout={simLayout}></Plot>\n        </div>\n        {/* <Plot divId={obsStyle} data={obsData} layout={obsLayout}></Plot>\n        <Plot divId={simStyle} data={simData} layout={simLayout}></Plot> */}\n    </>\n}","import SideBySide from \"./SideBySide\"\nimport Difference from './Difference'\nimport Flicker from \"./Flicker\"\n\nexport default function VisDisplay(props) {\n    function renderVis(vis) {\n        if (vis === 'side-by-side') {\n            return <SideBySide sim={props.sim} obs={props.obs}></SideBySide>\n        } else if (vis === 'diff') {\n            return <Difference sim={props.sim} obs={props.obs}></Difference>\n        } else if (vis === 'flicker') {\n            return <Flicker viewSim={props.viewSim} sim={props.sim} obs={props.obs}></Flicker>\n        }\n    }\n\n    return renderVis(props.vis)\n}","import React, { useState } from 'react';\n\nexport default function TextBox(props) {\n    return <span className=\"textBox\">\n    <label style={{marginRight: '5px'}}>{props.text}: </label>\n    <input \n        onChange={(e) => props.change(e.target.value)} \n    type=\"text\"></input> \n    </span>\n}","import ReactLoading from 'react-loading';\n\nexport default function StatusBar(props) {\n    \n    if (props.error) {\n        return <div className='errorMsg'>\n            Error: {props.error}\n        </div>\n    } \n    \n    const style = (props.status === 'idle') ? 'hiddenStatusBar' : 'statusBar';\n    if (props.status === 'success') {\n        return <div className='successMsg'>\n            Successfully loaded data.\n        </div>\n    } else {\n        return <div className={style}>\n            <div className='status'>{props.task}</div>\n            <ReactLoading className='loadingAnimation' type='bars'></ReactLoading>\n        </div>\n    }\n\n\n}","\nexport default function SelectMenu(props) {\n    function makeOption(op) {\n        return <option value={op}>{op}</option>\n    }\n\n    const options = props.options.map(makeOption)\n    return <>\n    <label>{props.text}: </label>\n    <select\n        onChange={(e) => props.change(e.target.value)}>\n        {options}\n    </select>\n    </>\n}","import { useState } from 'react';\nimport VisDisplay from './VisDisplay';\nimport TextBox from './TextBox';\nimport ReactLoading from 'react-loading'\nimport StatusBar from './StatusBar';\nimport SelectMenu from './SelectMenu';\nimport Trial1 from '../data/trial1resize.json'\nimport Trial2 from '../data/trial2resize.json'\nimport Trial3 from '../data/trial3resizeresize.json'\nimport Trial4 from '../data/trial4resize.json'\n\nvar applyLog = false \n\nexport default function Request(props) {\n    const setApplyLog = (str) => {\n        if (str === 'Yes') {\n            applyLog = true \n        } else if (str === 'No') {\n            applyLog = false \n        } else {\n            return \n        }\n    };\n    const [obsPath, setObsPath] = useState('');\n    const [n, setN] = useState(\"1\");\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState(null);\n\n    function handleRequest() {\n        setStatus('loading')\n        setError(null)\n\n        console.log(\"Submitted request for \" + obsPath)\n        if (obsPath === 'trial1') {\n            props.setData(Trial1)\n            setStatus('success')\n        } else if (obsPath === 'trial2') {\n            props.setData(Trial2)\n            setStatus('success')\n        } else if (obsPath === 'trial3') {\n            props.setData(Trial3)\n            setStatus('success')\n        } else if (obsPath === 'trial4') {\n            props.setData(Trial4)\n            setStatus('success')\n        } else {\n            setStatus('error')\n            setError('Please use one of trial{1,2,3,4}.')\n        }\n\n    }\n\n\n    var submitButton = <button onClick={handleRequest}>Submit</button>\n    if (error) {\n        submitButton = <button onClick={handleRequest}>Submit</button>\n    }\n    \n    if (status === 'loading') {\n        submitButton = <button disabled>Submit</button>\n    }\n\n\n\n    return <>\n    <TextBox text='Observed data' change={setObsPath}></TextBox> \n    <div style={{marginBottom:'10px'}}>\n        <span>\n        <SelectMenu text='Apply logscale to obs.' change={setApplyLog} options={[\"No\", \"Yes\"]}></SelectMenu>\n        </span>\n    </div>\n    <div className=\"flexSpaced\">\n        <span>\n        <SelectMenu text='Number of candidates' change={setN} options={[\"5\"]}></SelectMenu>\n        </span>\n        {submitButton}\n    </div>\n    <StatusBar task='Getting data...' status={status} error={error}></StatusBar>\n    </>\n}","import { activeRank } from \"./ControlPanel\";\n\nfunction girderLink(id) {\n\treturn `https://girder.hub.yt/#item/${id}`\n}\n\nconst dummyData = [\n\t{\n\t\trank: 1, \n\t\tt: 0.21, \n\t},\n\t{\n\t\trank: 2, \n\t\tt: 0.45\n\t},\n\t{\n\t\trank: 3, \n\t\tt: 0.45\n\t},\n\t{\n\t\trank: 4, \n\t\tt: 0.45\n\t},\n\t{\n\t\trank: 5, \n\t\tt: 0.45\n\t},\n\t{\n\t\trank: 4, \n\t\tt: 0.45\n\t},\n\t{\n\t\trank: 5, \n\t\tt: 0.45\n\t},\n]\n\nexport default function SimMenu(props) {\n\tfunction makeFile(sim) {\n\t\tfunction changeActiveSim() {\n\t\t\tprops.setActiveSim(sim);\n\t\t\tprops.setActiveRank(sim.rank);\n\t\t}\n\n\t\tlet button = <button onClick={changeActiveSim}>Show</button>\n\t\tif (activeRank === sim.rank) {\n\t\t\tbutton = <button onClick={changeActiveSim} disabled>Show</button>\n\t\t}\n\n\t\treturn <tr>\n\t\t\t<td>\n\t\t\t\t{sim.rank}\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t{sim.t.toFixed(2)}\n\t\t\t</td>\n\t\t\t{/* <td>\n\t\t\t\t{sim.name}\n\t\t\t</td> */}\n\t\t\t<td align=\"right\" >\n\t\t\t\t<a href={girderLink(sim.id)} target='_blank' rel=\"noreferrer\" >\n\t\t\t\t\t<button className=\"visButton\" style={{marginRight: '5px'}}>Open</button>\n\t\t\t\t</a>\n\t\t\t\t{button}\n\t\t\t</td>\n\t\t</tr>\n\t}\n\n\treturn <>\n\t\t<h3>Simulations:</h3>\n\t\t<div id=\"fileList\">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Rank</th>\n\t\t\t\t\t<th>t <span style={{fontWeight: 'normal', color: 'rgb(200, 200, 200)'}}>(Gyr)</span></th>\n\t\t\t\t\t{/* <th>Fname</th> */}\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t{props.data.sims.map(makeFile)}\n\t\t\t{/* {dummyData.map(makeFilpp.e)} */}\n\t\t\t</table>\n\t\t</div>\n\t</>\n}","var activeVis = 'side-by-side'\n\nconst vis = [\n\t{\n\t\tid: 'side-by-side',\n\t\ttext: \"Side-by-side\",\n\t},\n\t{\n\t\tid: 'diff',\n\t\ttext: \"Difference\"\n\t},\n\t{\n\t\tid: 'flicker',\n\t\ttext: \"Flicker\"\n\t},\n]\n\n\nexport default function VisMenu(props) {\n\tfunction changeActiveVis(v) {\n\t\tconsole.log('pressed ' + v.id)\n\t\tactiveVis = v.id;\n\t\tprops.setVis(v.id);\n\t}\n\t\n\tfunction makeButton(v) {\n\t\tif (v.id === activeVis) {\n\t\t\treturn <button className='visButton' \n\t\t\t\tonClick={() => changeActiveVis(v)} disabled>{v.text}</button>\t\n\t\t} else {\n\t\t\treturn <button className='visButton' \n\t\t\t\tonClick={() => changeActiveVis(v)}>{v.text}</button>\t\n\t\t}\n\t}\n\treturn <>\n\t\t<h3>Visualization: </h3>\n\t\t<div className=\"buttonRow\">\n\t\t\t{vis.map(makeButton)}\n\t\t</div>\n\t</>\n}","export default __webpack_public_path__ + \"static/media/rotate-left-svgrepo-com.3a1dd75a.svg\";","import { useState } from 'react';\nimport { activeRank } from './ControlPanel';\nimport Rotate from '../icons/rotate-left-svgrepo-com.svg'\nimport FlipX from '../icons/edit-flip-h-svgrepo-com.svg'\nimport FlipY from '../icons/edit-flip-v-svgrepo-com.svg'\n\nconst transforms = [\n\t{\n\t\ttext: \"ROT\",\n\t\taction: 'cw', \n\t\ticon: Rotate\n\t},\n\t{\n\t\ttext: \"VERT FLIP\",\n\t\taction: 'flip-y',\n\t\ticon: FlipX\n\t},\n\t{\n\t\ttext: \"HORI FLIP\",\n\t\taction: 'flip-x',\n\t\ticon: FlipY\n\t},\n]\n\n// function updateData(data, rank, new_sim) {\n// \tvar new_sims = []\n// \tfor (let i in data.sims) {\n// \t\tif (data.sims[i].rank === rank) {\n// \t\t\tnew_sims.push({\n// \t\t\t\trank: data.sims[i].rank, \n// \t\t\t\tname: data.sims[i].name,\n// \t\t\t\tt: data.sims[i].t, \n// \t\t\t\tdata: new_sim\n// \t\t\t})\n// \t\t} else {\n// \t\t\tnew_sims.push(data.sims[i])\n// \t\t}\n// \t}\n// \treturn {obs: data.obs, sims: new_sims}\n// }\n\nexport default function ImageMenu(props) {\n\tconst [toggleText, setToggleText] = useState('View Sim')\n\n\tfunction toggle() {\n\t\tlet viewSim = props.toggleViewSim();\n\t\tif (viewSim) {\n\t\t\tsetToggleText('View Sim')\n\t\t} else {\n\t\t\tsetToggleText('View Obs')\n\t\t}\n\t}\n\n    const axios = require('axios').default;\n\tvar activeSimFile = props.data.sims.find((s) => s.rank === activeRank).name\n    function handleRequest(action) {\n        axios.get(`/api/transform/${action}/`, {\n\t\t\tparams: {\n\t\t\t\tfilename: activeSimFile\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tprops.setData(response.data)\n                console.log('Success.')\n            })\n            .catch((error) => {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    console.log(error.request);\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    console.log('Error', error.message);\n                }\n            });\n        }\n\n\n\tfunction makeButton(v) {\n\t\treturn <button className='visButton' \n\t\t\tonClick={() => handleRequest(v.action)}><img src={v.icon} alt={v.action}></img></button>\t\n\t}\n\n\tfunction makeToggleButton() {\n\t\tif (props.vis === 'flicker') {\n\t\t\treturn <button className='visButton'\n\t\t\t\tonClick={toggle}>{toggleText}</button>\n\t\t} else {\n\t\t\treturn <button className='visButton'\n\t\t\t\tonClick={toggle} disabled>{toggleText}</button>\n\t\t}\n\t}\n\n\treturn <>\n\t<h3>Image Controls:</h3> \n\t<div className=\"buttonRow\">\n\t\t{transforms.map(makeButton)}\n\t\t{makeToggleButton()}\n\t</div>\n\t</>\n}","export default __webpack_public_path__ + \"static/media/edit-flip-h-svgrepo-com.57019281.svg\";","export default __webpack_public_path__ + \"static/media/edit-flip-v-svgrepo-com.12c6485d.svg\";","import SimMenu from \"./SimMenu\"\nimport VisMenu from \"./VisMenu\"\nimport ImageMenu from \"./ImageMenu\"\n\nexport var activeRank = 1\n\nfunction setActiveRank(v) {\n\tactiveRank = v\n\tconsole.log('activeRank:',  activeRank)\n}\n\n\nexport default function ControlPanel(props) {\n\t\n\treturn <>\n\t\t<SimMenu setActiveSim={props.setActiveSim} data={props.data} setActiveRank={setActiveRank}/>\n\t\t<ImageMenu data={props.data} setData={props.setData} vis={props.vis} toggleViewSim={props.toggleViewSim}></ImageMenu>\n\t\t<VisMenu setVis={props.setVis}></VisMenu>\n\t</>\n}","export default __webpack_public_path__ + \"static/media/info-svgrepo-com.a2695485.svg\";","import Request from \"./Request\"\nimport ControlPanel from './ControlPanel'\nimport InfoIcon from '../icons/info-svgrepo-com.svg'\n\nexport default function SideBar(props) {\n\tfunction controlPanel(data) {\n\t\tif (data.sims.length !== 0) {\n\t\t\treturn <ControlPanel \n\t\t\t\tdata={props.data} \n\t\t\t\tsetData={props.setData} \n\t\t\t\ttoggleViewSim={props.toggleViewSim} \n\t\t\t\tsetVis={props.setVis} \n\t\t\t\tvis={props.vis}\n\t\t\t\tsetActiveSim={props.setActiveSim} \n\t\t\t/>\n\t\t} else {\n\t\t\treturn <></>\n\t\t}\n\t}\n\n\treturn <>\n\t<div className=\"sideBar\">\n\t\t<div>\n\t\t\t<a href='https://github.com/lzawbrito/clummp' target='_blank' rel=\"noreferrer\">\n\t\t\t\t<img id='info' src={InfoIcon} height='20px' alt=\"info\"></img>\n\t\t\t</a>\n\t\t</div>\n\t\t<div className=\"centerText\">\n\t\t\t<h1 id=\"title\">CluMMP<span id='versionTag'>demo</span></h1> \n\t\t\t<div id=\"subtitle\">(Cluster Merger Matching Program)</div>\n\t\t</div>\n\t\t<div id=\"request\">\n\t\t\t<Request setData={props.setData}/>\n\t\t</div>\n\t\t<div id=\"controlPanel\">\n\t\t\t{controlPanel(props.data)}\n\t\t</div>\n\t</div>\n\t</>\n}","export default function VisFiller(props) {\n\treturn <div id=\"visFiller\">\n\t\tLoad data using the control panel.\n\t</div>\n}","import { useState } from 'react';\nimport './App.css';\nimport SideBar from './components/SideBar';\nimport VisDisplay from './components/VisDisplay';\nimport VisFiller from './components/VisFiller'\nimport { activeRank } from './components/ControlPanel';\n\nfunction App() {\n  const [data, setData] = useState({obs: [], sims: []});\n  const [activeSim, setActiveSim] = useState({});\n  const [vis, setVis] = useState('side-by-side');\n  const [viewSim, setViewSim] = useState(false)\n\n  function toggleViewSim() {\n    setViewSim(!(viewSim))\n    return viewSim\n  }\n\n  // Wrapper function to display filler in case there's no data. \n  function visDisplay(data) {\n    if (data.sims.length !== 0) {\n      return <VisDisplay sim={activeSim} obs={data.obs} vis={vis} viewSim={viewSim}/>\n    } else {\n      return <VisFiller></VisFiller>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <SideBar \n        setData={(d) => {\n          setData(d);\n          setActiveSim(d.sims[activeRank - 1]);\n        }} \n        data={data} \n        setActiveSim={setActiveSim}\n        setVis={setVis}\n        toggleViewSim={toggleViewSim}\n        vis={vis}\n      />\n      {visDisplay(data)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}